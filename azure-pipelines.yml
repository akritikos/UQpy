# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

variables:
  pythonVersion: 3.7
  srcDirectory: src
  PRE_COMMIT_HOME: $(Pipeline.Workspace)/pre-commit-cache

trigger:
  - master
  - feature/*

pool:
  vmImage: "ubuntu-latest"

steps:
  - task: UsePythonVersion@0
    displayName: "Use Python $(pythonVersion)"
    inputs:
      versionSpec: "$(pythonVersion)"

  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: 'dimtsap.UQpy'
      organization: 'dimtsap-github'
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: 'sonar.uqpy'
      cliProjectName: 'sonar.uqpy'
      cliSources: '.'

  - script: |
      python -m pip install --upgrade pip poetry
      poetry config virtualenvs.in-project true
    displayName: Install poetry

  - script: poetry install 
    displayName: Install project dependencies
  
  - task: SonarCloudAnalyze@1

  - task: SonarCloudPublish@1
    inputs:
      pollingTimeoutSec: '300'
  
  # - script: |
  #     #Install Flake8
  #     pip3 install --user flake8
  #     # Install PyTest
  #     pip3 install --user pytest
  #   displayName: 'Install Flake8 and PyTest'

  # - script: |
  #     python -m pip install flake8
  #     flake8 . --select=E
  #   displayName: 'Installing and running Flake8'

  # - script: |
  #     python -m pip install pylint
  #     pylint --ignored-modules=numpy,scipy,matplotlib,sklearn --disable=E0202 --disable=R,C,W  src/UQpy
  #   displayName: "Installing and running Pylint"

  # - script: |
  #     python -m pytest --cov=src/UQpy --doctest-modules --junitxml=test-results.xml
  #   displayName: Run unit test

  # - task: PublishTestResults@2 
  #   inputs: 
  #     testResultsFiles: '**/test-results.xml'


  # - bash: find $(srcDirectory) -type f -name "*.py" | xargs pylint
  #   displayName: "Linting : pylint"

  # - bash: flake8
  #   condition: always()
  #   displayName: "Linting: flake8"
  #   workingDirectory: $(srcDirectory)
